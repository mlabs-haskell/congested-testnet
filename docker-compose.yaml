services:

  # generate testnet config
  genesis_testnet_config:
    image: congested-testnet:latest
    # image: ghcr.io/sadmaxim/cgnet:latest
    command: ["sh", "-c", "/scripts/gen_testnet_conf.sh"]
    environment:
      - BYRON_GENESIS_SPEC_JSON=/scripts/byron.genesis.spec.json
      - CONFIGURATION_YAML=/scripts/configuration.yaml
      - ROOT=/data
      - SHARE=/share
    volumes:
      - testnet_data:/data
      - share_config:/share
      - ./scripts:/scripts

  # run genesis spo node
  genesis_spo_node:
    image: congested-testnet:latest
    command: ["sh", "-c", "/scripts/run_genesis_spo.sh"]
    environment:
      - TOPOLOGY_GENESIS_SPO_JSON=/scripts/topology_genesis_spo.json
      - PORT=3000
      - ROOT=/data
    ports:
      - "3000:3000"  
      - "12789:12789"  
    expose:
      - "3000"
      - "12789"
    volumes:
      - testnet_data:/data
      - ./scripts:/scripts
    networks:
      my:
        aliases:
          - genesis.local
    depends_on:
      - genesis_testnet_config


  # generate addtional utxo for main wallet  
  wallet:
    image: congested-testnet:latest
    command: ["sh", "-c", "/scripts/pay_to_wallet.sh"]
    environment:
      - ROOT=/data
      - CARDANO_NODE_SOCKET_PATH=/data
    volumes:
      - ./scripts:/scripts
      - testnet_data:/data
    restart : "on-failure"
    depends_on:
      - genesis_spo_node


  ogmios:
    image: congested-testnet:latest
    command: ["sh", "-c", "/scripts/run_ogmios.sh"]
    environment:
      - ROOT=/data
    ports:
      - "1337:1337"  
    expose:
      - "1337"  
    volumes:
      - ./scripts:/scripts
      # - testnet_data:/data
      - staking_node_data:/data
    networks:
      my:
        aliases:
        - ogmios.local
    restart: always


  kupo:
    image: congested-testnet:latest
    command: ["sh", "-c", "/scripts/run_kupo.sh"]
    environment:
      - ROOT=/data
    ports:
      - "1442:1442"  
    expose:
      - "1442"  
    volumes:
      - ./scripts:/scripts
      # - testnet_data:/data
      - staking_node_data:/data
    networks:
      my:
        aliases:
        - kupo.local
    restart: always



  prometheus:
    image: congested-testnet:latest
    command: ["sh", "-c", "/scripts/run_prometheus.sh"]
    environment:
      - DATA=/data
      - CARDANO_NODE_METRICS_URL=staking_node:12789
      # - CARDANO_NODE_METRICS_URL=genesis_spo_node:12789
      - SPAMMER_METRICS_URL=spammer:8001
    ports:
      - "9090:9090"  
    volumes:
      - ./scripts:/scripts
      - testnet_data:/data
    depends_on:
      - genesis_spo_node
    networks:
      my:
        aliases:
        - prometheus.local
    restart: always


  spammer:
    image: congested-testnet:latest
    command: ["sh", "-c", "sleep 2 && spammer"]
    environment:
      - WALLET_SKEY_PATH=/data/wallet.skey
      - CARDANO_NODE_METRICS_URL=staking.local:12789
      - SPAMMER_METRIC_PORT=8001
      - FAUCET_PORT=8000
      - N_WORKERS=2
      - OGMIOS_URL=ogmios.local
      - KUPO_URL=kupo.local
      - MEMPOOL_PAUSE_LIMIT=80000
      - MEMPOOL_UNPAUSE_LIMIT=60000
      - SPAMMER_STATE_FILE=/data/state.json
    ports:
      - "8001:8001"  
      - "8000:8000"  
    volumes:
      - ./scripts:/scripts
      - testnet_data:/data
      # - staking_node_data:/data
    networks:
      my:
        aliases:
        - spammer.local
    depends_on:
      - genesis_spo_node
      - staking_node
      - wallet
      - ogmios 
      - kupo
      - prometheus
    restart: always


  staking_node:
    image: congested-testnet:latest
    command: ["sh", "-c", "/scripts/run_stacking_node.sh"]
    environment:
      - PORT=3000
      - ACCESS_URL=genesis_spo_node
      - DATA=/data
      - CONFIG=/config
    # ports:
    #   - "3000:3000"  
      # - "12789:12789"  
    expose:
      - "3000"
      - "12789"
    volumes:
      - staking_node_data:/data
      - share_config:/config
      - ./scripts:/scripts
    depends_on:
      - genesis_spo_node
      - wallet
    networks:
      my:
        aliases:
          - staking.local
    restart : "on-failure"


  # share_config:
  #   image: python:3.9-slim
  #   command: ["python", "-m", "http.server", "5000", "--directory", "/config"]
  #   volumes:
  #     - share_config:/config
  #   ports:
  #     - "5000:5000"  


volumes:
  testnet_data:
  share_config:
  staking_node_data:

networks:
  my:
